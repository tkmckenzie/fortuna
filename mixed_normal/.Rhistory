source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
fibonacci(1:10)
source('~/code/PE/2.R', echo=TRUE)
fib.seq(3)
fibonacci.true(3)
fibonacci.true(5)
fibonacci.true(10)
source('~/code/PE/2.R', echo=TRUE)
fibonacci(1:10)
source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
fibonacci(10)
fibonacci.true(10)
current.num = fibonacci(i)
i = 3
current.num = fibonacci(i)
source('~/code/PE/2.R', echo=TRUE)
current.sum
fibonacci(6)
fibonacci(7)
fibonacci(8)
fibonacci(9)
fibonacci(1:10)
source('~/code/PE/2.R', echo=TRUE)
fibonacci(40)
fibonacci(41)
fibonacci(42)
source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
source('~/code/PE/2.R', echo=TRUE)
sqrt(600851475143)
source('~/code/PE/3.R', echo=TRUE)
n = 600851475143
upper.limit = floor(sqrt(n))
factors = c()
for (i in 2:upper.limit){
if (n %% i == 0){
factors = c(factors, i)
}
}
n = 100
upper.limit = floor(sqrt(n))
factors = c()
for (i in 2:upper.limit){
if (n %% i == 0){
factors = c(factors, i)
}
}
install.packages("rstan")
system("g++ -v")
system("gvv -v")
system("gcc -v")
library(ggplot2)
library(rstan)
library(dplyr)
install.packages("dplyr")
install.packages("data.table")
R.version
N = 100
x = runif(N, 0, 10)
y = 2 * x - 3 + rnorm(N, sd = 1)
plot(y ~ x)
m = lm(y ~ x)
summary(m)
t(x) %*% x
solve(t(x) %*% x)
solve(t(x) %*% x) %*% t(x) %*% y
X = cbind(1, x)
X
solve(t(X) %*% X) %*% (t(X) %*% y)
summary(m)
t(X)
t(X) %*% X
N
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
x = rnorm(N)
y = cumsum(x)
plot(y)
x = rnorm(N)
y = cumsum(x)
plot(y)
source('~/diffndiff/diff.R', echo=TRUE)
1e3 / 60
1e4 / 60
1e4 / (60^2)
1e5 / (60^2)
55 + 52
28 + 44
107 - 72
mode(c(2, 2, 2, 4))
1.79442e2 + 5.80796e1
4.14924E+03
4.14924E+03 + 5.67820E+03
library(rstan)
library(dummies)
install.packages("dummies")
library(dplyr)
2.38 + 6.1 + 3.71
107.61 + 92.73
43.62 / 200.34
x = 43.62 / 200.34
107.61 * x
x = 1 + x
107.61 * x
92.73 * x
131.04 + 112.92
43.20 - 30.50
120.46 * 24
18 * 160.62
4435 - 2892
4435 - 2892 - 118
240.92 * 12
library(shiny); runApp('git/fortuna/distribution_derivation/R/hyp_test_validation.R')
90-67
420*1.3
120/300
420*1.4
420*1.4 / 120
180 / 420
7178.73 - 5763.88
3.7e6 / 22141
337e3 * 167
337e3 * 167 / 1e6
485 / 2644
install.packages(c("dplyr", "ggplot2"))
install.packages("rstan")
source('~/git/tyche/mixed_normal/mixed_normal_stan_fit.R', echo=TRUE)
