setwd("~/git/snfa-devel")
remove.packages("snfa")
# devtools::install_local("snfa")
# install.packages("snfa_0.0.1.tar.gz", repos = NULL, type = "source")
devtools::install_github("tkmckenzie/snfa")
library(snfa)
example("allocative.efficiency")
example("fit.boundary")
?document
setwd("~/git/snfa-devel")
source('~/git/snfa-devel/document.R', echo=TRUE)
source('~/git/snfa-devel/1_document.R', echo=TRUE)
source('~/git/snfa-devel/2_reinstall.R', echo=TRUE)
source('~/git/snfa-devel/3_build.R', echo=TRUE)
source('~/git/snfa-devel/3_build.R', echo=TRUE)
source('~/git/snfa-devel/3_build.R', echo=TRUE)
source('~/git/snfa-devel/4_check.R', echo=TRUE)
source('~/git/snfa-devel/4_check.R', echo=TRUE)
help(package = "roxygen2")
source('~/git/snfa-devel/1_document.R', echo=TRUE)
source('~/git/snfa-devel/2_reinstall.R', echo=TRUE)
source('~/git/snfa-devel/3_build.R', echo=TRUE)
source('~/git/snfa-devel/4_check.R', echo=TRUE)
source('~/git/snfa-devel/4_check.R', echo=TRUE)
rm(list = ls())
source('~/git/snfa-devel/4_check.R', echo=TRUE)
source('~/git/snfa-devel/3_build.R', echo=TRUE)
help(package = "abind")
sessionInfo()
help(package = "rootSolve")
packageVersion("abind")
packageVersion("ggplot2")
packageVersion("prodlim")
packageVersion("quadprog")
packageVersion("Rdpack")
packageVersion("rootSolve")
R.version
source('~/git/snfa-devel/1_document.R', echo=TRUE)
source('~/git/snfa-devel/2_reinstall.R', echo=TRUE)
source('~/git/snfa-devel/3_build.R', echo=TRUE)
source('~/git/snfa-devel/4_check.R', echo=TRUE)
source('~/git/snfa-devel/1_document.R', echo=TRUE)
source('~/git/snfa-devel/2_reinstall.R', echo=TRUE)
source('~/git/snfa-devel/3_build.R', echo=TRUE)
source('~/git/snfa-devel/4_check.R', echo=TRUE)
?devtools::release
source('~/git/snfa-scripts/5_release.R', echo=TRUE)
library(rversions)
source('~/git/snfa-scripts/3_build.R', echo=TRUE)
source('~/git/snfa-scripts/1_document.R', echo=TRUE)
source('~/git/snfa-scripts/2_reinstall.R', echo=TRUE)
source('~/git/snfa-scripts/3_build.R', echo=TRUE)
source('~/git/snfa-scripts/4_check.R', echo=TRUE)
source('~/git/snfa-scripts/2_reinstall.R', echo=TRUE)
?ks.test
source('~/git/fortuna/gp_all/gp_envelope/3_post.R', echo=TRUE)
dim(abind)
dim(f.pred)
frontier.pred.mean = apply(f.pred[,2,], 1, min)
#Plot
point.df = data.frame(x = x, y = y)
fit.df = data.frame(x = rep(x.pred, times = 2),
y = c(y.pred.mean, frontier.pred.mean),
variable = rep(c("Mean", "Frontier"), each = N.pred))
ggplot(point.df, aes(x, y)) +
geom_point() +
geom_line(data = fit.df, aes(color = variable)) +
theme_bw()
